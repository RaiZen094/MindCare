name: 🚀 Deploy MindCare Application

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/test-pipeline.yml'

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------- Test Backend ----------
  test-backend:
    name: 🧪 Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: 🔧 Setup Maven wrapper
        run: |
          cd backend
          chmod +x mvnw

      - name: 🧪 Run Backend Tests (non-blocking)
        run: |
          cd backend
          ./mvnw clean test --batch-mode --no-transfer-progress || {
            echo "⚠️ Tests failed, continuing (build will still run)";
          }

      - name: 🏗️ Build Backend
        run: |
          cd backend
          ./mvnw clean package -DskipTests --batch-mode --no-transfer-progress

      - name: 📦 Upload Backend Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar
          retention-days: 7

  # ---------- Test Frontend ----------
  test-frontend:
    name: 🧪 Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: 🧪 Lint Code (non-blocking)
        working-directory: frontend
        run: npm run lint || echo "Lint skipped"

      - name: 🏗️ Build Frontend
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_URL: https://mindcare-backend-uyos.onrender.com/api
        run: npm run build

  # ---------- Deploy Backend (Render) ----------
  deploy-backend:
    name: 🚀 Deploy Backend (Render)
    needs: [test-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: ✅ Check deploy hook secret
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "❌ Missing secret RENDER_DEPLOY_HOOK (Render → Service → Settings → Deploy hooks)"
            exit 1
          fi

      - name: 🔔 Trigger Render deploy
        run: |
          code=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}")
          echo "Render HTTP: $code"
          if [ "$code" -lt 200 ] || [ "$code" -ge 300 ]; then
            echo "❌ Failed to trigger Render deploy"
            exit 1
          fi

      - name: 🏥 Health Check Backend
        run: |
          echo "⏳ Waiting 60s for startup..."
          sleep 60
          for i in {1..15}; do
            echo "Attempt $i..."
            if curl -fsS --max-time 10 https://mindcare-backend-uyos.onrender.com/api/auth/health > /dev/null; then
              echo "✅ Backend healthy"
              exit 0
            fi
            sleep 20
          done
          echo "❌ Backend health check failed"
          exit 1

  # ---------- Deploy Frontend (Vercel) ----------
  deploy-frontend:
    name: 🚀 Deploy Frontend (Vercel)
    needs: [test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install deps
        run: npm ci

      - name: ⬇️ Install Vercel CLI
        run: npm i -g vercel@latest

      - name: ✅ Check Vercel secrets
        run: |
          [ -n "${{ secrets.VERCEL_TOKEN }}" ] || (echo "❌ VERCEL_TOKEN missing" && exit 1)
          [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ] || (echo "❌ VERCEL_PROJECT_ID missing" && exit 1)
          [ -n "${{ secrets.VERCEL_ORG_ID }}" ] || (echo "❌ VERCEL_ORG_ID missing" && exit 1)

      - name: 🔗 Link project & pull env (production)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}        # e.g., raiyanfzs845-3659s-projects
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel pull --environment=production --yes --token="$VERCEL_TOKEN"

      - name: 🏗️ Build (can override public envs here)
        env:
          NEXT_PUBLIC_API_URL: https://mindcare-backend-uyos.onrender.com/api
        run: npm run build

      - name: 🚀 Deploy (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel deploy --prebuilt --prod --yes --token="$VERCEL_TOKEN"

  # ---------- Integration Tests ----------
  integration-tests:
    name: 🧪 Integration Tests
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: 🧪 Test endpoints
        run: |
          set -e
          curl -f https://mindcare-backend-uyos.onrender.com/api/auth/health
          curl -f https://mind-care-zeta.vercel.app

  # ---------- Summary ----------
  deployment-summary:
    name: 📢 Deployment Summary
    needs: [deploy-backend, deploy-frontend, integration-tests]
    runs-on: ubuntu-latest
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: 📢 Results
        run: |
          echo "Backend:   ${{ needs.deploy-backend.result }}"
          echo "Frontend:  ${{ needs.deploy-frontend.result }}"
          echo "E2E tests: ${{ needs.integration-tests.result }}"
