name: 🚀 Deploy MindCare Application

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/test-pipeline.yml'

env:
  RENDER_API_URL: https://api.render.com/v1
  
jobs:
  # Test Backend
  test-backend:
    name: 🧪 Test Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: 🔧 Setup Maven wrapper
      run: |
        cd backend
        chmod +x mvnw
    
    - name: 🧪 Run Backend Tests
      run: |
        cd backend
        ./mvnw clean test --batch-mode --no-transfer-progress
    
    - name: 🏗️ Build Backend
      run: |
        cd backend
        ./mvnw clean package -DskipTests --batch-mode --no-transfer-progress
    
    - name: 📦 Upload Backend Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: backend/target/*.jar
        retention-days: 7

  # Test Frontend
  test-frontend:
    name: 🧪 Test Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 📦 Install Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: 🧪 Lint Code
      run: |
        cd frontend
        npm run lint || echo "Linting skipped"
    
    - name: 🏗️ Build Frontend
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: https://mindcare-backend-uyos.onrender.com/api

  # Deploy Backend to Render
  deploy-backend:
    name: 🚀 Deploy Backend
    needs: [test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🚀 Trigger Render Deployment
      run: |
        echo "🚀 Triggering Render deployment..."
        response=$(curl -s -w "HTTP_STATUS:%{http_code}" \
          -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          "${{ env.RENDER_API_URL }}/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -d '{"clearCache": false}')
        
        body=$(echo "$response" | sed -E 's/HTTP_STATUS:[0-9]+$//')
        status=$(echo "$response" | tr -d '\n' | sed -E 's/.*HTTP_STATUS:([0-9]+)$/\1/')
        
        echo "Response body: $body"
        echo "HTTP status: $status"
        
        if [ "$status" -eq 200 ] || [ "$status" -eq 201 ]; then
          echo "✅ Deployment triggered successfully!"
        else
          echo "❌ Failed to trigger deployment. Status: $status"
          exit 1
        fi
    
    - name: ⏳ Wait for Deployment
      run: |
        echo "⏳ Waiting for deployment to start..."
        sleep 30
        echo "⏳ Continuing to wait for deployment..."
        sleep 60
    
    - name: 🏥 Health Check Backend
      run: |
        echo "🏥 Checking backend health..."
        max_attempts=15
        attempt=1
        
        while [ $attempt -le $max_attempts ]; do
          echo "🔍 Health check attempt $attempt/$max_attempts..."
          
          if curl -f -s --max-time 10 https://mindcare-backend-uyos.onrender.com/api/auth/health; then
            echo ""
            echo "✅ Backend is healthy and responding!"
            exit 0
          else
            echo "⏳ Backend not ready yet, waiting 20 seconds..."
            sleep 20
            attempt=$((attempt + 1))
          fi
        done
        
        echo "❌ Backend health check failed after $max_attempts attempts"
        echo "🔍 Let's check what's happening..."
        curl -v https://mindcare-backend-uyos.onrender.com/api/auth/health || true
        exit 1

  # Deploy Frontend to Vercel
  deploy-frontend:
    name: 🚀 Deploy Frontend
    needs: [test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 📦 Install Vercel CLI
      run: npm i -g vercel@latest
    
    - name: 🔧 Pull Vercel Environment
      run: |
        cd frontend
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: 🏗️ Build Frontend
      run: |
        cd frontend
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: 🚀 Deploy to Vercel
      run: |
        cd frontend
        vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  # Integration Tests
  integration-tests:
    name: 🧪 Integration Tests
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: 🧪 Test API Endpoints
      run: |
        echo "🧪 Running integration tests..."
        
        # Test health endpoint
        echo "1️⃣ Testing health endpoint..."
        if curl -f https://mindcare-backend-uyos.onrender.com/api/auth/health; then
          echo "✅ Health endpoint working"
        else
          echo "❌ Health endpoint failed"
          exit 1
        fi
        
        # Test admin check endpoint
        echo "2️⃣ Testing admin check endpoint..."
        if curl -f https://mindcare-backend-uyos.onrender.com/api/auth/admin-check; then
          echo "✅ Admin check endpoint working"
        else
          echo "❌ Admin check endpoint failed"
        fi
        
        # Test frontend
        echo "3️⃣ Testing frontend..."
        if curl -f https://mind-care-zeta.vercel.app; then
          echo "✅ Frontend is accessible"
        else
          echo "❌ Frontend is not accessible"
        fi
        
        echo "🎉 Integration tests completed!"

  # Deployment Summary
  deployment-summary:
    name: 📢 Deployment Summary
    needs: [deploy-backend, deploy-frontend, integration-tests]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: 📢 Deployment Results
      run: |
        echo "🎯 MindCare Deployment Summary"
        echo "==============================="
        echo "Backend Deployment: ${{ needs.deploy-backend.result }}"
        echo "Frontend Deployment: ${{ needs.deploy-frontend.result }}"
        echo "Integration Tests: ${{ needs.integration-tests.result }}"
        echo ""
        
        if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
          echo "✅ 🎉 DEPLOYMENT SUCCESSFUL!"
          echo ""
          echo "🌐 Application URLs:"
          echo "├── Frontend: https://mind-care-zeta.vercel.app"
          echo "├── Backend:  https://mindcare-backend-uyos.onrender.com"
          echo "└── API Docs: https://mindcare-backend-uyos.onrender.com/api/auth/health"
          echo ""
          echo "🔐 Admin Credentials:"
          echo "├── Email: admin@mindcareconnect.bd"
          echo "└── Password: [Check environment variables]"
        else
          echo "❌ 💥 DEPLOYMENT FAILED!"
          echo ""
          echo "🔍 Check the logs above for details."
          echo "🛠️ Common issues:"
          echo "├── API keys not configured"
          echo "├── Build failures"
          echo "└── Service not responding"
        fi
