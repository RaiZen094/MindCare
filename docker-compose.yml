version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: mindcare-database
    environment:
      POSTGRES_DB: mindcare_connect
      POSTGRES_USER: mindcare_user
      POSTGRES_PASSWORD: mindcare_dev_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindcare_user -d mindcare_connect"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mindcare-backend
    environment:
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://database:5432/mindcare_connect
      DATABASE_USERNAME: mindcare_user
      DATABASE_PASSWORD: mindcare_dev_password_123
      DATABASE_DRIVER: org.postgresql.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      
      # JPA Configuration
      JPA_DDL_AUTO: update
      JPA_SHOW_SQL: true
      JPA_FORMAT_SQL: true
      H2_CONSOLE_ENABLED: false
      
      # JWT Configuration
      JWT_SECRET: dev_jwt_secret_key_for_development_not_secure
      JWT_EXPIRATION: 86400000
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://frontend:3000
      
      # Admin Configuration
      ADMIN_EMAIL: admin@localhost
      ADMIN_PASSWORD: admin123
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: development
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/public/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindcare-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: mindcare-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - mindcare-network

networks:
  mindcare-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
