version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mindcare-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mindcare_connect
      POSTGRES_USER: mindcare_user
      POSTGRES_PASSWORD: mindcare_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindcare_user -d mindcare_connect"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mindcare-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: production
      DATABASE_URL: jdbc:postgresql://postgres:5432/mindcare_connect
      DATABASE_USERNAME: mindcare_user
      DATABASE_PASSWORD: mindcare_pass
      DATABASE_DRIVER: org.postgresql.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      JPA_DDL_AUTO: update
      JPA_SHOW_SQL: "false"
      JWT_SECRET: MindCare_Connect_Super_Secret_Key_2025_Bangladesh_Mental_Health_Platform_Docker
      JWT_EXPIRATION: 86400000
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://frontend:3000
      ADMIN_EMAIL: admin@mindcareconnect.bd
      ADMIN_PASSWORD: MindCare@Admin2025
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/public/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindcare-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
      PORT: 3000
      HOSTNAME: 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for session management (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: mindcare-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass mindcare_redis_pass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mindcare-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mindcare-network:
    driver: bridge
