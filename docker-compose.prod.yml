version: '3.8'

services:
  # PostgreSQL Database for Production
  database:
    image: postgres:15-alpine
    container_name: mindcare-database-prod
    environment:
      POSTGRES_DB: ${DB_NAME:-mindcare_connect}
      POSTGRES_USER: ${DB_USER:-mindcare_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mindcare_secure_password}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - mindcare-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mindcare_user} -d ${DB_NAME:-mindcare_connect}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mindcare-backend-prod
    environment:
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://database:5432/${DB_NAME:-mindcare_connect}
      DATABASE_USERNAME: ${DB_USER:-mindcare_user}
      DATABASE_PASSWORD: ${DB_PASSWORD:-mindcare_secure_password}
      DATABASE_DRIVER: org.postgresql.Driver
      HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      
      # CORS Configuration
      CORS_ALLOWED_ORIGINS: ${CORS_ORIGINS:-https://yourdomain.com}
      
      # Admin Configuration
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@mindcareconnect.bd}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # Spring Profile
      SPRING_PROFILES_ACTIVE: production
    depends_on:
      database:
        condition: service_healthy
    networks:
      - mindcare-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/public/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mindcare-frontend-prod
    environment:
      NEXT_PUBLIC_API_URL: ${API_URL:-https://api.yourdomain.com}
      NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mindcare-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: mindcare-nginx-prod
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - mindcare-prod-network
    restart: unless-stopped

networks:
  mindcare-prod-network:
    driver: bridge

volumes:
  postgres_prod_data:
    driver: local
